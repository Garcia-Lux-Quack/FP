// Practica6.cpp : Este archivo contiene la función "main". La ejecución del programa comienza y termina ahí.
//

#include <iostream>
using namespace std; 

int main()
{
	//Enteros
	int n1 = 10;
	int n2 = 20;

	//Floats
	float f1 = 1.5;
	float f2 = 5.2;

	cout << boolalpha; //imprime true en lugar de 1

	//Operaciones con desigualdad, comparaciones, magnitud
	//1. Igualdad
	cout << "(n1 == n2): " << (n1 == n2) << endl;
	cout << "(f1 == f2): " << (f1 == f2) << endl;

	//2. Desigualdad
	cout << "(n1 != n2): " << (n1 != n2) << endl;
	cout << "(f1 != f2): " << (f1 != f2) << endl;

	//3. Mayor que
	cout << "(n1 > n2): " << (n1 > n2) << endl;
	cout << "(f1 > f2): " << (f1 > f2) << endl;

	//4. Menor que
	cout << "(n1 < n2): " << (n1 < n2) << endl;
	cout << "(f1 < f2): " << (f1 < f2) << endl;

	//5. Mayor o igual que
	cout << "(n1 >= n2): " << (n1 >= n2) << endl;
	cout << "(f1 >= f2): " << (f1 >= f2) << endl;

	//6. Menor o igual que
	cout << "(n1 <= n2): " << (n1 <= n2) << endl;
	cout << "(f1 <= f2): " << (f1 <= f2) << endl;

	//7. Comparaciones de tipos mixtos
	cout << "(n1 > n2): " << (n1 < n2) << endl;
	cout << "(f1 < f2): " << (f1 > f2) << endl;

	//8. Valores negativos
	cout << "(n1 > -n2): " << (n1 < -n2) << endl;
	cout << "(f1 < -f2): " << (f1 > -f2) << endl;

	//9. Combinación de comparaciones 
	// Puedes ysar la palabra and en lugar de && 
	// Puedes usar la palbra or en lugar de ||
	cout << "((na < n2) && (f1 > f2)): " << ((n1 < n2) && (f1 > f2)) << endl; 
	cout << "((n1 == 10)) || (f1 == 5.2)): " << ((n1 == 10) || (f1 == 5.2)) << endl; 

	//10. Comparaciones anidadas 
	cout << "(n1 < n2 - 10): " << (n1 > n2 - 10) << endl; 
	cout << "(f1 <= f2 + 10.5): " << (f1 <= f2 + 10.5) << endl; 

	// 11. Comparación con constantes 
	cout << "(n1 == 10): " << (n1 == 10) << endl; 
	cout << "(f1 == 5.2): " << (f1 == 5.2) << endl; 

	// 12. Comparación con los resltados de las operaciones aritméticas 
	cout << "((n1 + n2) < (f1 * f2)): " << ((n1 + n2) < (f1 * f2)) << endl; 
	cout << "((n1 + n2) >= (f1 / f2)): " << ((n1 - n2) >= (f1 / f2)) << endl; 

	// 13. Comparación de resultados negativos y positivos 
	cout << "(( -n1) < n2): " << ((-n1) < n2) << endl; 
	cout << "((-f1) > f2): " << ((-f1) < f2) << endl; 

	// 14. Combinación de aritméticas y comparación 
	cout << "((n1 * n2) > (f1 - f2)): " << ((n1 * n2) > (f1 - f2)) << endl; 
	cout << "((n1 / n2) <= (f1 + f2)): " << ((n1 / n2) <= (f1 + f2)) << endl; 

	// 15. Comparaciones encadenadas 
	cout << "(n1 < n2 and  n2 < n1): " << (n1 < n2 and n2 < n1) << endl; 
	cout << "(f2 > n1 and f1 > n1): " << (f2 > n1 and f1 > n1) << endl; 
	
	// 16. Comparación de módulos 
	cout << "((n2 % n1) == 0): " << ((n2 % n1) == 0) << endl; 
	
	// Operadores lógicos
	bool p = true, q = false;

	// 17. Lógico AND 
	cout << "(p and q): " << (p and q)<< endl; 

	// 18. OR lógico 
	cout << "(p or q): " << (p or q) << endl;

	// 19. Lógico NOT 
	// Puedes usar la palabra not en lugar de ! 
	cout << "(not p): " << (not (p)) << endl;

	// 20. Combinación de AND y NOT 
	cout << "(p and not (q)): " << (p and (q)) << endl; 

	// 21. Doble NOT 
	cout << "(not (not (q))): " << (not (not (q))) << endl; 

	// 22. Operaciones mixtas 
	cout << "(not (p and q) or (p or not (q))): " << (not (p and q) or (p or not (q))) << endl; 

	// 23. Asiganación de varaibles con operadores lógicos 
	bool a = p and q; 
	cout << "Valor asignado a variables 'a': " << a << endl; 

	// 24. Asiganación de operaciones logicas con numeros enteros (distinto de 0 es verdadero, cero es falso)
	int x = 5, y = 0;
	cout << "(x and y): " << (x and y) << endl;

	// 25. Operaciones con datos mixtos
	float m = 3.5, n = 0.0;
	cout << "(m or n): " << (m or n) << endl;

	// 26. Expresiones complejas
	cout << "((p or q) and (x or n)): " << ((p or q) and (x or n)) << endl;

	// 27. Expresiones anidas
	cout << "((x and not (y)) and (m or not (q))): " << ((x and not (y)) and (m or not (q))) << endl;

	// 28. Operaciones logicas con numeros de punto flotante
	out << "((m > n) and (m <= 3.5)): " << ((p or q) and (x or n)) << endl;


	char 1 character: alpha, numerico, caracterespecial; 
	char opcion1 = 'a';
	cout << opcion1 << endl; 
}
